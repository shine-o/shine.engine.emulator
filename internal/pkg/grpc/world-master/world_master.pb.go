// Code generated by protoc-gen-go. DO NOT EDIT.
// source: world_master.proto

package wm

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a09909aeaab56b5, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}

func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}

func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}

func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}

func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ConnectionInfo struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectionInfo) Reset()         { *m = ConnectionInfo{} }
func (m *ConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectionInfo) ProtoMessage()    {}
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a09909aeaab56b5, []int{1}
}

func (m *ConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionInfo.Unmarshal(m, b)
}

func (m *ConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionInfo.Marshal(b, m, deterministic)
}

func (m *ConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionInfo.Merge(m, src)
}

func (m *ConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectionInfo.Size(m)
}

func (m *ConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionInfo proto.InternalMessageInfo

func (m *ConnectionInfo) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *ConnectionInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type WorldDetails struct {
	ID                   int32           `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Conn                 *ConnectionInfo `protobuf:"bytes,3,opt,name=Conn,proto3" json:"Conn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WorldDetails) Reset()         { *m = WorldDetails{} }
func (m *WorldDetails) String() string { return proto.CompactTextString(m) }
func (*WorldDetails) ProtoMessage()    {}
func (*WorldDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a09909aeaab56b5, []int{2}
}

func (m *WorldDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorldDetails.Unmarshal(m, b)
}

func (m *WorldDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorldDetails.Marshal(b, m, deterministic)
}

func (m *WorldDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorldDetails.Merge(m, src)
}

func (m *WorldDetails) XXX_Size() int {
	return xxx_messageInfo_WorldDetails.Size(m)
}

func (m *WorldDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_WorldDetails.DiscardUnknown(m)
}

var xxx_messageInfo_WorldDetails proto.InternalMessageInfo

func (m *WorldDetails) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *WorldDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorldDetails) GetConn() *ConnectionInfo {
	if m != nil {
		return m.Conn
	}
	return nil
}

type WorldRegistered struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorldRegistered) Reset()         { *m = WorldRegistered{} }
func (m *WorldRegistered) String() string { return proto.CompactTextString(m) }
func (*WorldRegistered) ProtoMessage()    {}
func (*WorldRegistered) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a09909aeaab56b5, []int{3}
}

func (m *WorldRegistered) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorldRegistered.Unmarshal(m, b)
}

func (m *WorldRegistered) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorldRegistered.Marshal(b, m, deterministic)
}

func (m *WorldRegistered) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorldRegistered.Merge(m, src)
}

func (m *WorldRegistered) XXX_Size() int {
	return xxx_messageInfo_WorldRegistered.Size(m)
}

func (m *WorldRegistered) XXX_DiscardUnknown() {
	xxx_messageInfo_WorldRegistered.DiscardUnknown(m)
}

var xxx_messageInfo_WorldRegistered proto.InternalMessageInfo

func (m *WorldRegistered) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type Worlds struct {
	List                 []*WorldDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Worlds) Reset()         { *m = Worlds{} }
func (m *Worlds) String() string { return proto.CompactTextString(m) }
func (*Worlds) ProtoMessage()    {}
func (*Worlds) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a09909aeaab56b5, []int{4}
}

func (m *Worlds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Worlds.Unmarshal(m, b)
}

func (m *Worlds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Worlds.Marshal(b, m, deterministic)
}

func (m *Worlds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Worlds.Merge(m, src)
}

func (m *Worlds) XXX_Size() int {
	return xxx_messageInfo_Worlds.Size(m)
}

func (m *Worlds) XXX_DiscardUnknown() {
	xxx_messageInfo_Worlds.DiscardUnknown(m)
}

var xxx_messageInfo_Worlds proto.InternalMessageInfo

func (m *Worlds) GetList() []*WorldDetails {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "wm.Empty")
	proto.RegisterType((*ConnectionInfo)(nil), "wm.ConnectionInfo")
	proto.RegisterType((*WorldDetails)(nil), "wm.WorldDetails")
	proto.RegisterType((*WorldRegistered)(nil), "wm.WorldRegistered")
	proto.RegisterType((*Worlds)(nil), "wm.Worlds")
}

func init() {
	proto.RegisterFile("world_master.proto", fileDescriptor_6a09909aeaab56b5)
}

var fileDescriptor_6a09909aeaab56b5 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xd7, 0x6c, 0xed, 0xec, 0x9b, 0x4e, 0x79, 0x5e, 0xc2, 0x4e, 0x25, 0x0c, 0x29, 0x08,
	0x3d, 0x54, 0x0f, 0xde, 0xad, 0x48, 0x0f, 0x4a, 0x89, 0x07, 0xc1, 0x8b, 0xd4, 0x2e, 0x6a, 0xa1,
	0x69, 0x46, 0x13, 0x29, 0xfe, 0xf7, 0x92, 0x87, 0x9b, 0x8a, 0xb7, 0x97, 0xbc, 0xef, 0x7b, 0xbf,
	0x8f, 0x0f, 0x70, 0x34, 0x43, 0xb7, 0x79, 0xd6, 0xb5, 0x75, 0x6a, 0xc8, 0xb6, 0x83, 0x71, 0x06,
	0xd9, 0xa8, 0xc5, 0x1c, 0xc2, 0x1b, 0xbd, 0x75, 0x9f, 0xe2, 0x12, 0x96, 0xd7, 0xa6, 0xef, 0x55,
	0xe3, 0x5a, 0xd3, 0x97, 0xfd, 0xab, 0xc1, 0x25, 0xb0, 0xb2, 0xe2, 0x41, 0x12, 0xa4, 0xb1, 0x64,
	0x65, 0x85, 0x08, 0xb3, 0xca, 0x0c, 0x8e, 0xb3, 0x24, 0x48, 0x43, 0x49, 0xb3, 0x78, 0x82, 0xc3,
	0x47, 0x7f, 0xb8, 0x50, 0xae, 0x6e, 0x3b, 0x4b, 0x9e, 0x82, 0x3c, 0xa1, 0x64, 0x65, 0xe1, 0x3d,
	0xf7, 0xb5, 0x56, 0xe4, 0x89, 0x25, 0xcd, 0x78, 0x06, 0x33, 0x4f, 0xe2, 0xd3, 0x24, 0x48, 0x17,
	0x39, 0x66, 0xa3, 0xce, 0xfe, 0x92, 0x25, 0xed, 0xc5, 0x39, 0x1c, 0xd3, 0x6d, 0xa9, 0xde, 0x5a,
	0x9f, 0x5a, 0x6d, 0x90, 0xc3, 0xfc, 0xe1, 0xa3, 0x69, 0x94, 0xb5, 0xc4, 0x38, 0x90, 0xbb, 0xa7,
	0xc8, 0x20, 0x22, 0xb1, 0xc5, 0x35, 0xcc, 0xba, 0xd6, 0x3a, 0x1e, 0x24, 0xd3, 0x74, 0x91, 0x9f,
	0xf8, 0xf3, 0xbf, 0x23, 0x4a, 0xda, 0xe6, 0xef, 0x10, 0xdd, 0x51, 0x17, 0x78, 0x05, 0x47, 0x3b,
	0x02, 0xe9, 0xf0, 0x9f, 0x65, 0x75, 0xba, 0xff, 0xf9, 0xc9, 0x22, 0x26, 0xb8, 0x86, 0xf8, 0x56,
	0xb9, 0x6f, 0x6c, 0xec, 0x35, 0x54, 0xe5, 0x0a, 0xf6, 0x72, 0x2b, 0x26, 0x2f, 0x11, 0x95, 0x7d,
	0xf1, 0x15, 0x00, 0x00, 0xff, 0xff, 0x85, 0x6d, 0x07, 0xca, 0x82, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ context.Context
	_ grpc.ClientConnInterface
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MasterClient is the client API for Master service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MasterClient interface {
	RegisterWorld(ctx context.Context, in *WorldDetails, opts ...grpc.CallOption) (*WorldRegistered, error)
	GetWorlds(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Worlds, error)
}

type masterClient struct {
	cc grpc.ClientConnInterface
}

func NewMasterClient(cc grpc.ClientConnInterface) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) RegisterWorld(ctx context.Context, in *WorldDetails, opts ...grpc.CallOption) (*WorldRegistered, error) {
	out := new(WorldRegistered)
	err := c.cc.Invoke(ctx, "/wm.Master/RegisterWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) GetWorlds(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Worlds, error) {
	out := new(Worlds)
	err := c.cc.Invoke(ctx, "/wm.Master/GetWorlds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MasterServer is the server API for Master service.
type MasterServer interface {
	RegisterWorld(context.Context, *WorldDetails) (*WorldRegistered, error)
	GetWorlds(context.Context, *Empty) (*Worlds, error)
}

// UnimplementedMasterServer can be embedded to have forward compatible implementations.
type UnimplementedMasterServer struct{}

func (*UnimplementedMasterServer) RegisterWorld(ctx context.Context, req *WorldDetails) (*WorldRegistered, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterWorld not implemented")
}

func (*UnimplementedMasterServer) GetWorlds(ctx context.Context, req *Empty) (*Worlds, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorlds not implemented")
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_RegisterWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorldDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).RegisterWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wm.Master/RegisterWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).RegisterWorld(ctx, req.(*WorldDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_GetWorlds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).GetWorlds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wm.Master/GetWorlds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).GetWorlds(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wm.Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterWorld",
			Handler:    _Master_RegisterWorld_Handler,
		},
		{
			MethodName: "GetWorlds",
			Handler:    _Master_GetWorlds_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "world_master.proto",
}
