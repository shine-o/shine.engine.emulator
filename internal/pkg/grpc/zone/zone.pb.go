// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zone.proto

package zone

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CharacterData struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CharacterData) Reset()         { *m = CharacterData{} }
func (m *CharacterData) String() string { return proto.CompactTextString(m) }
func (*CharacterData) ProtoMessage()    {}
func (*CharacterData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71619a26b0a679a, []int{0}
}

func (m *CharacterData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharacterData.Unmarshal(m, b)
}

func (m *CharacterData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharacterData.Marshal(b, m, deterministic)
}

func (m *CharacterData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharacterData.Merge(m, src)
}

func (m *CharacterData) XXX_Size() int {
	return xxx_messageInfo_CharacterData.Size(m)
}

func (m *CharacterData) XXX_DiscardUnknown() {
	xxx_messageInfo_CharacterData.DiscardUnknown(m)
}

var xxx_messageInfo_CharacterData proto.InternalMessageInfo

type TransferStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferStatus) Reset()         { *m = TransferStatus{} }
func (m *TransferStatus) String() string { return proto.CompactTextString(m) }
func (*TransferStatus) ProtoMessage()    {}
func (*TransferStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71619a26b0a679a, []int{1}
}

func (m *TransferStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferStatus.Unmarshal(m, b)
}

func (m *TransferStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferStatus.Marshal(b, m, deterministic)
}

func (m *TransferStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferStatus.Merge(m, src)
}

func (m *TransferStatus) XXX_Size() int {
	return xxx_messageInfo_TransferStatus.Size(m)
}

func (m *TransferStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TransferStatus proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CharacterData)(nil), "zone.CharacterData")
	proto.RegisterType((*TransferStatus)(nil), "zone.TransferStatus")
}

func init() {
	proto.RegisterFile("zone.proto", fileDescriptor_b71619a26b0a679a)
}

var fileDescriptor_b71619a26b0a679a = []byte{
	// 111 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xaa, 0xca, 0xcf, 0x4b,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xf8, 0xb9, 0x78, 0x9d, 0x33,
	0x12, 0x8b, 0x12, 0x93, 0x4b, 0x52, 0x8b, 0x5c, 0x12, 0x4b, 0x12, 0x95, 0x04, 0xb8, 0xf8, 0x42,
	0x8a, 0x12, 0xf3, 0x8a, 0xd3, 0x52, 0x8b, 0x82, 0x4b, 0x12, 0x4b, 0x4a, 0x8b, 0x8d, 0x3c, 0xb8,
	0x58, 0xa2, 0xf2, 0xf3, 0x52, 0x85, 0x1c, 0xb8, 0x04, 0x61, 0x32, 0x70, 0x2d, 0x42, 0xc2, 0x7a,
	0x60, 0x23, 0x51, 0xcc, 0x90, 0x12, 0x81, 0x08, 0xa2, 0x9a, 0xa3, 0xc4, 0x90, 0xc4, 0x06, 0xb6,
	0xd9, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x34, 0x05, 0xd6, 0xc5, 0x87, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ context.Context
	_ grpc.ClientConnInterface
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ZoneClient is the client API for Zone service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZoneClient interface {
	TransferCharacter(ctx context.Context, in *CharacterData, opts ...grpc.CallOption) (*TransferStatus, error)
}

type zoneClient struct {
	cc grpc.ClientConnInterface
}

func NewZoneClient(cc grpc.ClientConnInterface) ZoneClient {
	return &zoneClient{cc}
}

func (c *zoneClient) TransferCharacter(ctx context.Context, in *CharacterData, opts ...grpc.CallOption) (*TransferStatus, error) {
	out := new(TransferStatus)
	err := c.cc.Invoke(ctx, "/zone.Zone/TransferCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZoneServer is the server API for Zone service.
type ZoneServer interface {
	TransferCharacter(context.Context, *CharacterData) (*TransferStatus, error)
}

// UnimplementedZoneServer can be embedded to have forward compatible implementations.
type UnimplementedZoneServer struct{}

func (*UnimplementedZoneServer) TransferCharacter(ctx context.Context, req *CharacterData) (*TransferStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferCharacter not implemented")
}

func RegisterZoneServer(s *grpc.Server, srv ZoneServer) {
	s.RegisterService(&_Zone_serviceDesc, srv)
}

func _Zone_TransferCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CharacterData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneServer).TransferCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zone.Zone/TransferCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneServer).TransferCharacter(ctx, req.(*CharacterData))
	}
	return interceptor(ctx, in, info, handler)
}

var _Zone_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zone.Zone",
	HandlerType: (*ZoneServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TransferCharacter",
			Handler:    _Zone_TransferCharacter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zone.proto",
}
