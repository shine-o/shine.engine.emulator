// Code generated by protoc-gen-go. DO NOT EDIT.
// source: world.proto

package world

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorldQuery struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ID                   int32    `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorldQuery) Reset()         { *m = WorldQuery{} }
func (m *WorldQuery) String() string { return proto.CompactTextString(m) }
func (*WorldQuery) ProtoMessage()    {}
func (*WorldQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_b509c40833d40ff2, []int{0}
}

func (m *WorldQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorldQuery.Unmarshal(m, b)
}

func (m *WorldQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorldQuery.Marshal(b, m, deterministic)
}

func (m *WorldQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorldQuery.Merge(m, src)
}

func (m *WorldQuery) XXX_Size() int {
	return xxx_messageInfo_WorldQuery.Size(m)
}

func (m *WorldQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_WorldQuery.DiscardUnknown(m)
}

var xxx_messageInfo_WorldQuery proto.InternalMessageInfo

func (m *WorldQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorldQuery) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type WorldData struct {
	WorldNumber          int32    `protobuf:"varint,1,opt,name=WorldNumber,proto3" json:"WorldNumber,omitempty"`
	WorldName            string   `protobuf:"bytes,2,opt,name=WorldName,proto3" json:"WorldName,omitempty"`
	WorldStatus          int32    `protobuf:"varint,3,opt,name=WorldStatus,proto3" json:"WorldStatus,omitempty"`
	IP                   string   `protobuf:"bytes,4,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 int32    `protobuf:"varint,5,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorldData) Reset()         { *m = WorldData{} }
func (m *WorldData) String() string { return proto.CompactTextString(m) }
func (*WorldData) ProtoMessage()    {}
func (*WorldData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b509c40833d40ff2, []int{1}
}

func (m *WorldData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorldData.Unmarshal(m, b)
}

func (m *WorldData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorldData.Marshal(b, m, deterministic)
}

func (m *WorldData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorldData.Merge(m, src)
}

func (m *WorldData) XXX_Size() int {
	return xxx_messageInfo_WorldData.Size(m)
}

func (m *WorldData) XXX_DiscardUnknown() {
	xxx_messageInfo_WorldData.DiscardUnknown(m)
}

var xxx_messageInfo_WorldData proto.InternalMessageInfo

func (m *WorldData) GetWorldNumber() int32 {
	if m != nil {
		return m.WorldNumber
	}
	return 0
}

func (m *WorldData) GetWorldName() string {
	if m != nil {
		return m.WorldName
	}
	return ""
}

func (m *WorldData) GetWorldStatus() int32 {
	if m != nil {
		return m.WorldStatus
	}
	return 0
}

func (m *WorldData) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *WorldData) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type CharacterQuery struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CharacterQuery) Reset()         { *m = CharacterQuery{} }
func (m *CharacterQuery) String() string { return proto.CompactTextString(m) }
func (*CharacterQuery) ProtoMessage()    {}
func (*CharacterQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_b509c40833d40ff2, []int{2}
}

func (m *CharacterQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharacterQuery.Unmarshal(m, b)
}

func (m *CharacterQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharacterQuery.Marshal(b, m, deterministic)
}

func (m *CharacterQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharacterQuery.Merge(m, src)
}

func (m *CharacterQuery) XXX_Size() int {
	return xxx_messageInfo_CharacterQuery.Size(m)
}

func (m *CharacterQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_CharacterQuery.DiscardUnknown(m)
}

var xxx_messageInfo_CharacterQuery proto.InternalMessageInfo

func (m *CharacterQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CharacterData struct {
	Data                 [][]byte `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CharacterData) Reset()         { *m = CharacterData{} }
func (m *CharacterData) String() string { return proto.CompactTextString(m) }
func (*CharacterData) ProtoMessage()    {}
func (*CharacterData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b509c40833d40ff2, []int{3}
}

func (m *CharacterData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharacterData.Unmarshal(m, b)
}

func (m *CharacterData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharacterData.Marshal(b, m, deterministic)
}

func (m *CharacterData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharacterData.Merge(m, src)
}

func (m *CharacterData) XXX_Size() int {
	return xxx_messageInfo_CharacterData.Size(m)
}

func (m *CharacterData) XXX_DiscardUnknown() {
	xxx_messageInfo_CharacterData.DiscardUnknown(m)
}

var xxx_messageInfo_CharacterData proto.InternalMessageInfo

func (m *CharacterData) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_b509c40833d40ff2, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}

func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}

func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}

func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}

func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type DatabaseInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseInfo) Reset()         { *m = DatabaseInfo{} }
func (m *DatabaseInfo) String() string { return proto.CompactTextString(m) }
func (*DatabaseInfo) ProtoMessage()    {}
func (*DatabaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b509c40833d40ff2, []int{5}
}

func (m *DatabaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseInfo.Unmarshal(m, b)
}

func (m *DatabaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseInfo.Marshal(b, m, deterministic)
}

func (m *DatabaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseInfo.Merge(m, src)
}

func (m *DatabaseInfo) XXX_Size() int {
	return xxx_messageInfo_DatabaseInfo.Size(m)
}

func (m *DatabaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseInfo proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WorldQuery)(nil), "world.WorldQuery")
	proto.RegisterType((*WorldData)(nil), "world.WorldData")
	proto.RegisterType((*CharacterQuery)(nil), "world.CharacterQuery")
	proto.RegisterType((*CharacterData)(nil), "world.CharacterData")
	proto.RegisterType((*Empty)(nil), "world.Empty")
	proto.RegisterType((*DatabaseInfo)(nil), "world.DatabaseInfo")
}

func init() {
	proto.RegisterFile("world.proto", fileDescriptor_b509c40833d40ff2)
}

var fileDescriptor_b509c40833d40ff2 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xb1, 0x4e, 0x84, 0x40,
	0x10, 0x86, 0x6f, 0x39, 0x56, 0x65, 0x0e, 0x89, 0x8e, 0x9a, 0x6c, 0x88, 0x05, 0x59, 0x2d, 0xa8,
	0x4e, 0xa3, 0xb1, 0xb1, 0x15, 0x63, 0x68, 0x2e, 0x88, 0x85, 0xf5, 0xa2, 0x6b, 0x2c, 0x44, 0x2e,
	0x7b, 0x4b, 0xcc, 0x3d, 0x86, 0xcf, 0xe1, 0x4b, 0x1a, 0xe6, 0x56, 0x40, 0x13, 0x2b, 0x66, 0xfe,
	0xfc, 0xff, 0xcc, 0xc7, 0x2c, 0xcc, 0x3e, 0x1a, 0xf3, 0xf6, 0x3c, 0x5f, 0x9a, 0xc6, 0x36, 0xc8,
	0xa9, 0x91, 0xe7, 0x00, 0x8f, 0x5d, 0x71, 0xdf, 0x6a, 0xb3, 0x46, 0x04, 0x7f, 0xa1, 0x6a, 0x2d,
	0x58, 0xc2, 0xd2, 0xa0, 0xa4, 0x1a, 0x23, 0xf0, 0xf2, 0x4c, 0x78, 0x09, 0x4b, 0x79, 0xe9, 0xe5,
	0x99, 0xfc, 0x64, 0x10, 0x50, 0x24, 0x53, 0x56, 0x61, 0x02, 0x33, 0x6a, 0x16, 0x6d, 0x5d, 0x69,
	0x43, 0x41, 0x5e, 0x8e, 0x25, 0x3c, 0x76, 0x76, 0x1a, 0xec, 0xd1, 0xe0, 0x41, 0xe8, 0xf3, 0x0f,
	0x56, 0xd9, 0x76, 0x25, 0xa6, 0xa3, 0xfc, 0x46, 0xa2, 0xfd, 0x85, 0xf0, 0x29, 0xe8, 0xe5, 0x45,
	0xc7, 0x58, 0x34, 0xc6, 0x0a, 0x4e, 0x56, 0xaa, 0xe5, 0x29, 0x44, 0x37, 0xaf, 0xca, 0xa8, 0x27,
	0xab, 0xcd, 0xbf, 0x7f, 0x22, 0x4f, 0x60, 0xb7, 0x77, 0x11, 0x3c, 0x82, 0xdf, 0x7d, 0x05, 0x4b,
	0xa6, 0x69, 0x58, 0x52, 0x2d, 0xb7, 0x81, 0xdf, 0xd6, 0x4b, 0xbb, 0x96, 0x11, 0x84, 0x9d, 0x50,
	0xa9, 0x95, 0xce, 0xdf, 0x5f, 0x9a, 0x8b, 0x2f, 0x06, 0x9c, 0xb8, 0xf0, 0x0a, 0xc2, 0x3b, 0x6d,
	0x87, 0x1b, 0xec, 0xcf, 0x37, 0x87, 0x1d, 0x0e, 0x19, 0xef, 0x8d, 0x25, 0x9a, 0x3b, 0xc1, 0x6b,
	0x08, 0xfa, 0xf5, 0x78, 0xe4, 0x0c, 0xbf, 0xb1, 0xe3, 0xc3, 0xbf, 0xb2, 0xcb, 0x9e, 0xc1, 0xce,
	0x0f, 0x0c, 0x86, 0xce, 0x43, 0x98, 0xf1, 0x81, 0xeb, 0xc6, 0xac, 0x72, 0x52, 0x6d, 0xd1, 0x2b,
	0x5f, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x00, 0xc3, 0xe0, 0xc4, 0xf4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ context.Context
	_ grpc.ClientConnInterface
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorldClient is the client API for World service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorldClient interface {
	GetWorldData(ctx context.Context, in *WorldQuery, opts ...grpc.CallOption) (*WorldData, error)
	Character(ctx context.Context, in *CharacterQuery, opts ...grpc.CallOption) (*CharacterData, error)
	Database(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DatabaseInfo, error)
}

type worldClient struct {
	cc grpc.ClientConnInterface
}

func NewWorldClient(cc grpc.ClientConnInterface) WorldClient {
	return &worldClient{cc}
}

func (c *worldClient) GetWorldData(ctx context.Context, in *WorldQuery, opts ...grpc.CallOption) (*WorldData, error) {
	out := new(WorldData)
	err := c.cc.Invoke(ctx, "/world.World/GetWorldData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) Character(ctx context.Context, in *CharacterQuery, opts ...grpc.CallOption) (*CharacterData, error) {
	out := new(CharacterData)
	err := c.cc.Invoke(ctx, "/world.World/Character", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) Database(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DatabaseInfo, error) {
	out := new(DatabaseInfo)
	err := c.cc.Invoke(ctx, "/world.World/Database", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorldServer is the server API for World service.
type WorldServer interface {
	GetWorldData(context.Context, *WorldQuery) (*WorldData, error)
	Character(context.Context, *CharacterQuery) (*CharacterData, error)
	Database(context.Context, *Empty) (*DatabaseInfo, error)
}

// UnimplementedWorldServer can be embedded to have forward compatible implementations.
type UnimplementedWorldServer struct{}

func (*UnimplementedWorldServer) GetWorldData(ctx context.Context, req *WorldQuery) (*WorldData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorldData not implemented")
}

func (*UnimplementedWorldServer) Character(ctx context.Context, req *CharacterQuery) (*CharacterData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Character not implemented")
}

func (*UnimplementedWorldServer) Database(ctx context.Context, req *Empty) (*DatabaseInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Database not implemented")
}

func RegisterWorldServer(s *grpc.Server, srv WorldServer) {
	s.RegisterService(&_World_serviceDesc, srv)
}

func _World_GetWorldData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorldQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).GetWorldData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.World/GetWorldData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).GetWorldData(ctx, req.(*WorldQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_Character_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CharacterQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).Character(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.World/Character",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).Character(ctx, req.(*CharacterQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_Database_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).Database(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.World/Database",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).Database(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _World_serviceDesc = grpc.ServiceDesc{
	ServiceName: "world.World",
	HandlerType: (*WorldServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWorldData",
			Handler:    _World_GetWorldData_Handler,
		},
		{
			MethodName: "Character",
			Handler:    _World_Character_Handler,
		},
		{
			MethodName: "Database",
			Handler:    _World_Database_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "world.proto",
}
